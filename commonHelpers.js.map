{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst dateTimePicker = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('#start-timer');\nconst daysElement = document.querySelector('[data-days]');\nconst hoursElement = document.querySelector('[data-hours]');\nconst minutesElement = document.querySelector('[data-minutes]');\nconst secondsElement = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet countdownInterval = null;\n\nstartButton.disabled = true;\n\nconst convertMs = ms => {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n};\n\nconst updateTimer = ms => {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n  daysElement.textContent = days.toString().padStart(2, '0');\n  hoursElement.textContent = hours.toString().padStart(2, '0');\n  minutesElement.textContent = minutes.toString().padStart(2, '0');\n  secondsElement.textContent = seconds.toString().padStart(2, '0');\n};\n\nconst startTimer = () => {\n  if (!userSelectedDate) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Please choose a valid date and time.',\n    });\n    return;\n  }\n\n  const targetDate = userSelectedDate.getTime();\n  startButton.disabled = true;\n  dateTimePicker.disabled = true;\n\n  countdownInterval = setInterval(() => {\n    const now = new Date().getTime();\n    const distance = targetDate - now;\n\n    if (distance <= 0) {\n      clearInterval(countdownInterval);\n      updateTimer(0);\n      iziToast.success({\n        title: 'Countdown Finished',\n        message: 'The countdown has reached its end.',\n      });\n      startButton.disabled = false;\n      dateTimePicker.disabled = false;\n    } else {\n      updateTimer(distance);\n    }\n  }, 1000);\n};\n\nconst handleDateTimeChange = selectedDates => {\n  const selectedDate = selectedDates[0];\n  const currentDate = new Date().getTime();\n\n  if (selectedDate.getTime() <= currentDate) {\n    startButton.disabled = true;\n    iziToast.error({\n      title: 'Error',\n      message: 'Please choose a date and time in the future.',\n    });\n  } else {\n    startButton.disabled = false;\n    userSelectedDate = selectedDate;\n  }\n};\n\nflatpickr(dateTimePicker, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose: handleDateTimeChange,\n});\n\nstartButton.addEventListener('click', startTimer);\n"],"names":["dateTimePicker","startButton","daysElement","hoursElement","minutesElement","secondsElement","userSelectedDate","countdownInterval","convertMs","ms","days","hours","minutes","seconds","updateTimer","startTimer","iziToast","targetDate","now","distance","handleDateTimeChange","selectedDates","selectedDate","currentDate","flatpickr"],"mappings":"2GAKA,MAAMA,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAE9D,IAAIC,EAAmB,KACnBC,EAAoB,KAExBN,EAAY,SAAW,GAEvB,MAAMO,EAAYC,GAAM,CAMtB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,EAEMC,EAAcL,GAAM,CACxB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUC,CAAE,EACtDP,EAAY,YAAcQ,EAAK,SAAU,EAAC,SAAS,EAAG,GAAG,EACzDP,EAAa,YAAcQ,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EAC3DP,EAAe,YAAcQ,EAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,EAC/DP,EAAe,YAAcQ,EAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,CACjE,EAEME,EAAa,IAAM,CACvB,GAAI,CAACT,EAAkB,CACrBU,EAAS,MAAM,CACb,MAAO,QACP,QAAS,sCACf,CAAK,EACD,MACD,CAED,MAAMC,EAAaX,EAAiB,UACpCL,EAAY,SAAW,GACvBD,EAAe,SAAW,GAE1BO,EAAoB,YAAY,IAAM,CACpC,MAAMW,EAAM,IAAI,KAAM,EAAC,QAAO,EACxBC,EAAWF,EAAaC,EAE1BC,GAAY,GACd,cAAcZ,CAAiB,EAC/BO,EAAY,CAAC,EACbE,EAAS,QAAQ,CACf,MAAO,qBACP,QAAS,oCACjB,CAAO,EACDf,EAAY,SAAW,GACvBD,EAAe,SAAW,IAE1Bc,EAAYK,CAAQ,CAEvB,EAAE,GAAI,CACT,EAEMC,EAAuBC,GAAiB,CAC5C,MAAMC,EAAeD,EAAc,CAAC,EAC9BE,EAAc,IAAI,KAAM,EAAC,QAAO,EAElCD,EAAa,QAAS,GAAIC,GAC5BtB,EAAY,SAAW,GACvBe,EAAS,MAAM,CACb,MAAO,QACP,QAAS,8CACf,CAAK,IAEDf,EAAY,SAAW,GACvBK,EAAmBgB,EAEvB,EAEAE,EAAUxB,EAAgB,CACxB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAASoB,CACX,CAAC,EAEDnB,EAAY,iBAAiB,QAASc,CAAU"}