{"version":3,"file":"1-timer.js","sources":["../../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\r\nimport 'flatpickr/dist/flatpickr.min.css';\r\nimport iziToast from 'izitoast';\r\nimport 'izitoast/dist/css/iziToast.min.css';\r\n\r\nconst dateTimePicker = document.querySelector('#datetime-picker');\r\nconst startButton = document.querySelector('#start-timer');\r\nconst daysElement = document.querySelector('[data-days]');\r\nconst hoursElement = document.querySelector('[data-hours]');\r\nconst minutesElement = document.querySelector('[data-minutes]');\r\nconst secondsElement = document.querySelector('[data-seconds]');\r\n\r\nlet countdownInterval;\r\n\r\nstartButton.disabled = true;\r\n\r\nconst convertMs = ms => {\r\n  const second = 1000;\r\n  const minute = second * 60;\r\n  const hour = minute * 60;\r\n  const day = hour * 24;\r\n\r\n  const days = Math.floor(ms / day);\r\n  const hours = Math.floor((ms % day) / hour);\r\n  const minutes = Math.floor(((ms % day) % hour) / minute);\r\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\r\n\r\n  return { days, hours, minutes, seconds };\r\n};\r\n\r\nconst updateTimer = ms => {\r\n  const { days, hours, minutes, seconds } = convertMs(ms);\r\n  daysElement.textContent = days.toString().padStart(2, '0');\r\n  hoursElement.textContent = hours.toString().padStart(2, '0');\r\n  minutesElement.textContent = minutes.toString().padStart(2, '0');\r\n  secondsElement.textContent = seconds.toString().padStart(2, '0');\r\n};\r\n\r\nconst startTimer = () => {\r\n  const targetDate = new Date(dateTimePicker.value).getTime();\r\n  if (isNaN(targetDate)) {\r\n    iziToast.error({\r\n      title: 'Error',\r\n      message: 'Please choose a valid date and time.',\r\n    });\r\n    return;\r\n  }\r\n\r\n  startButton.disabled = true;\r\n\r\n  countdownInterval = setInterval(() => {\r\n    const now = new Date().getTime();\r\n    const distance = targetDate - now;\r\n\r\n    if (distance < 0) {\r\n      clearInterval(countdownInterval);\r\n      updateTimer(0);\r\n      iziToast.success({\r\n        title: 'Countdown Finished',\r\n        message: 'The countdown has reached its end.',\r\n      });\r\n      startButton.disabled = false;\r\n    } else {\r\n      updateTimer(distance);\r\n    }\r\n  }, 1000);\r\n};\r\n\r\nconst handleDateTimeChange = () => {\r\n  const selectedDate = new Date(dateTimePicker.value).getTime();\r\n  const currentDate = new Date().getTime();\r\n\r\n  if (selectedDate <= currentDate) {\r\n    startButton.disabled = true;\r\n    iziToast.error({\r\n      title: 'Error',\r\n      message: 'Please choose a date and time in the future.',\r\n    });\r\n  } else {\r\n    startButton.disabled = false;\r\n  }\r\n};\r\n\r\ndateTimePicker.addEventListener('input', handleDateTimeChange);\r\nstartButton.addEventListener('click', startTimer);\r\n\r\n// Оновлений код для виклику календаря для вибору дати\r\nflatpickr(dateTimePicker, {\r\n  enableTime: true,\r\n  dateFormat: 'Y-m-d H:i',\r\n  minDate: 'now',\r\n});\r\n"],"names":["dateTimePicker","startButton","daysElement","hoursElement","minutesElement","secondsElement","countdownInterval","convertMs","ms","days","hours","minutes","seconds","updateTimer","startTimer","targetDate","iziToast","now","distance","handleDateTimeChange","selectedDate","currentDate","flatpickr"],"mappings":"svBAKA,MAAMA,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAE9D,IAAIC,EAEJL,EAAY,SAAW,GAEvB,MAAMM,EAAYC,GAAM,CAMtB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,EAEMC,EAAcL,GAAM,CACxB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUC,CAAE,EACtDN,EAAY,YAAcO,EAAK,SAAU,EAAC,SAAS,EAAG,GAAG,EACzDN,EAAa,YAAcO,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EAC3DN,EAAe,YAAcO,EAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,EAC/DN,EAAe,YAAcO,EAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,CACjE,EAEME,EAAa,IAAM,CACvB,MAAMC,EAAa,IAAI,KAAKf,EAAe,KAAK,EAAE,UAClD,GAAI,MAAMe,CAAU,EAAG,CACrBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,sCACf,CAAK,EACD,MACD,CAEDf,EAAY,SAAW,GAEvBK,EAAoB,YAAY,IAAM,CACpC,MAAMW,EAAM,IAAI,KAAM,EAAC,QAAO,EACxBC,EAAWH,EAAaE,EAE1BC,EAAW,GACb,cAAcZ,CAAiB,EAC/BO,EAAY,CAAC,EACbG,EAAS,QAAQ,CACf,MAAO,qBACP,QAAS,oCACjB,CAAO,EACDf,EAAY,SAAW,IAEvBY,EAAYK,CAAQ,CAEvB,EAAE,GAAI,CACT,EAEMC,EAAuB,IAAM,CACjC,MAAMC,EAAe,IAAI,KAAKpB,EAAe,KAAK,EAAE,UAC9CqB,EAAc,IAAI,KAAM,EAAC,QAAO,EAElCD,GAAgBC,GAClBpB,EAAY,SAAW,GACvBe,EAAS,MAAM,CACb,MAAO,QACP,QAAS,8CACf,CAAK,GAEDf,EAAY,SAAW,EAE3B,EAEAD,EAAe,iBAAiB,QAASmB,CAAoB,EAC7DlB,EAAY,iBAAiB,QAASa,CAAU,EAGhDQ,EAAUtB,EAAgB,CACxB,WAAY,GACZ,WAAY,YACZ,QAAS,KACX,CAAC"}